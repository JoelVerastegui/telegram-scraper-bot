name: Dart Testing and Docker Publishing

on:
  push:
    branches:
      - master # Ejecuta tests en cada push a master
    tags:
      - 'v*.*.*' # ¡Ejecuta el job de publicación solo cuando se crea un tag!
  pull_request:
    branches:
      - master

# Define variables globales
env:
  DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_REPO: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.IMAGE_NAME }}
  DART_VERSION: '3.6.1'

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Dart SDK
        uses: dart-lang/setup-dart@v1
        with:
          version: ${{ env.DART_VERSION }}

      - name: Get Dependencies
        run: dart pub get

      - name: Run Dart Tests
        run: dart test

  publish_docker:
    name: Build & Publish Image
    runs-on: ubuntu-latest
    # SOLO se ejecuta si el evento es un tag
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: test # Requiere que los tests hayan pasado

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Tag Name
        id: extract_tag
        run: echo "TAG_VERSION=$(echo ${{ github.ref }} | sed 's/refs\/tags\///')" >> $GITHUB_OUTPUT

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          # Publica la imagen con dos tags: el de la versión y 'latest'
          tags: |
            ${{ env.DOCKER_REPO }}:${{ steps.extract_tag.outputs.TAG_VERSION }}
            ${{ env.DOCKER_REPO }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Completion Message
        run: echo 'Successfully published ${{ env.DOCKER_REPO }} with tags: ${{ steps.extract_tag.outputs.TAG_VERSION }} and latest.'